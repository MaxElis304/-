"""
Каждый класс реализовать в отдельном модуле, импортируя их в производные модули.
Создать класс Car с полями марка, мощность, год производства. Добавить конструктор класса.
Создать производный от Car класс PassengerCar. Новые поля: количество пассажиров, ремонтная книжка
    (словарь вида запчасти: год замены). Определить конструктор, с вызовом родительского конструктора.
    Определить функции добавления замененной запчасти в ремонтную книжку, получения год замены по названию,
    форматированной печати всей ремонтной книжки. Переопределить метод преобразования в строку для печати
    основной информации (марка, мощность, год производства, количество пассажиров).
Создать производный от Car класс Truck. Новые поля: максимальная грузоподъемность, ФИ водителя, текущий груз
    (словарь вида название товара: вес). Определить конструктор, с вызовом родительского конструктора.
    Определить функции изменения водителя, добавления и удаления груза, форматированной печати текущего груза.
    Переопределить метод преобразования в строку для печати основной информации (марка, мощность, год производства,
    максимальная грузоподъемность, ФИ водителя).
Создать класс Autopark. Поля: название автопарка, список легковых машин (список экземпляров класса PassengerCar),
    список грузовиков (список экземпляров класса Truck). Определить конструктор. Переопределить метод
    преобразования в строку для печати всей информации об автопарке (с использованием переопределения в классах
    PassengerCar и Truck). Переопределить методы получения количества грузовиков функцией len, получения грузовой
    машины по индексу, изменения по индексу, удаления по индексу (пусть номера у грузовых машин считаются с 1,
    а индекс 0 – список всех легковых машин). Переопределить операции + и - для добавления или удаления грузовой
    машины. Добавить функцию создания txt-файла и записи всей информации в него (в том числе ремонтных
    книжек и списка грузов).
Предусмотреть хотя бы в 3 местах обработку возможных исключений.
В каждом модуле провести подробное тестирование всех создаваемых объектов и функций.
"""

class Car:

    def __init__(self, mark, power, production_year, d):
        self.mark = mark 
        self.power = power 
        self.production_year = production_year
        self.d = d 

    def print(self):
        print(f"""
        Mark: {self.mark},
        Power: {self.power},
        Production year: {self.production_year}
        D: {self.d}""")

a = Car("Volvo", 560, 2015, {'колеса': 2016})            
a.print()

class PassengerCar(Car):
    def __init__(self, number_of_passengers, repair_book):
        super().__init__()

        self.number_of_passenger = number_of_passengers
        self.repair_book = repair_book

    def replace_spare_part(self, space_part):

        new_info = {}
        pass

    def get_replacement_year(self, year):
        pass


    def print_info(self):
        pass


class Truck(Car):
    
    def __init__(self, maximum_capacity, name_surname, current_cargo):
        super.__init__

        self.maximum_capacity = maximum_capacity
        self.name_surname = name_surname 
        self.current_cargo = current_cargo

    def change_driver(self, new_driver):
        self.name_surname = new_driver
    
    def unload(self):
        self.current_cargo.clear()

    def load(self):
        pass    



        
